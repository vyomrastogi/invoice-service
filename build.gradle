plugins {
    id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'jacoco'
    id "com.diffplug.spotless" version "6.18.0"
}

group = 'com.invocify'
version = '1.1.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
    }
    dependsOn test // tests are required to run before generating the report
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'com/invocify/invoice/entity/**',
                    'com/invocify/invoice/repository/**',
                    'com/invocify/invoice/model/**',
                    'com/invocify/invoice/InvoiceServiceApplication**',
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.9
            }
            excludes = [
                    'com.invocify.invoice.entity.*',
                    'com.invocify.invoice.repository.*',
                    'com.invocify.invoice.model.*',
                    'com.invocify.invoice.InvoiceServiceApplication',
            ]

        }

        rule {
            enabled = true
            element = 'CLASS'
            includes = [
                    'com.invocify.invoice.controller.*',
            ]
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.9
            }
            excludes = [
                    'com.invocify.invoice.entity.*',
                    'com.invocify.invoice.repository.*',
                    'com.invocify.invoice.model.*',
                    'com.invocify.invoice.InvoiceServiceApplication',
            ]

        }

    }
}
spotless {
  java {
    googleJavaFormat()
  }
}
